cmake_minimum_required(VERSION 3.21)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_VISIBILITY_PRESET hidden)
if ("${CMAKE_SYSTEM_NAME}" STREQUAL "iOS" OR IOS)
    set(CMAKE_OSX_ARCHITECTURES "arm64")
    set(SIMDUTF_TOOLS OFF)
else()
    set(CMAKE_OSX_ARCHITECTURES "arm64;x86_64")
endif()

project(CommentEmojis VERSION 1.0.0)

add_library(${PROJECT_NAME} SHARED
    src/main.cpp
    src/label.cpp
    src/animated-sprite.cpp
    src/emoji-picker.cpp
    src/scroll-layer.cpp
)

if (DEFINED ENV{GITHUB_ACTIONS})
    set_property(TARGET ${PROJECT_NAME} PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
    if (WIN32)
        if (MSVC)
            set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /INCREMENTAL:NO")
            set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /INCREMENTAL:NO")
        elseif (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
            set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-incremental:no")
            set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,-incremental:no")
        endif()
    endif()
endif()

if (NOT DEFINED ENV{GEODE_SDK})
    message(FATAL_ERROR "Unable to find Geode SDK! Please define GEODE_SDK environment variable to point to Geode")
else()
    message(STATUS "Found Geode: $ENV{GEODE_SDK}")
endif()

add_subdirectory($ENV{GEODE_SDK} ${CMAKE_CURRENT_BINARY_DIR}/geode)

CPMAddPackage("gh:simdutf/simdutf@6.0.3")
target_link_libraries(${PROJECT_NAME} simdutf)

setup_geode_mod(${PROJECT_NAME})

if ("${CMAKE_SYSTEM_NAME}" STREQUAL "iOS" OR IOS)
    target_compile_definitions(${PROJECT_NAME} PUBLIC CommentType=CommentType)
endif()
